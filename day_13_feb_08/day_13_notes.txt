OOP
----
class - structure/blueprint/template for creating Object 
		class has only logical existance
		class doesn't have physical existance
		
object - Real Entity
		 Every instance of a class
		 Object has physical existance

-a class in javascript is created using constructor function(ES-5).
-a class in javascript is created using class keyword.(ES-6).
-class contains variables(states/properties) and methods(behaviours) inside it.



Prototype
---------
-A prototype is an object used to implement structure, state, and behaviour inheritance.
-Prototype is the mechanism by which JavaScript objects inherit features from one another
-Prototype is an object, where we can attach methods and properties,which enables all the other objects to inherit these methods and properties.
-Prototype is a base class for all the objects, and it helps us to achieve inheritance.
-All JavaScript objects inherit properties and methods from a prototype.
-properties added to the prototype of a class gets available to all the objects of that class.
-prototype should be used When we have to add new properties like variables and methods 
at a later point of time,and these properties needs to be shared across all the instances, 
-a property should be added to the constructor of a class if value of the property changes per object
-a property should be added to the prototype of a class if the value remains same for all objects.



Inheritance
-----------
- Inheritance is the concept where one class inherits the properties
  from another class.
- the class which inherits properties is called child/derived/sub.
  the class which provides the properties is called parent/base/super.
- it is mainly used for code re-usability.
- also called is-a relationship



'Object' class
==============
-Objects are variables that can contain many values inside it.
-Collection of properties & values. 
   ex: {prop1:val1,prop2:val2}
-Object properties are written in 'key:value' pairs. 
  ex: let user = {name:'sachin' , age:35, add:'mumbai'}
-we can access object properties in two ways:
	objectName.propertyName;       user.name;
	objectName["propertyName"];    user['age'];
-4 ways to create javascript object
   1. Object Literal    ex: var obj1 = {};
   2. Object create()   ex: var obj2 = Object.create({});
   3. Object Class	    ex: var obj3 = new Object();
   4. Using Class		ex: var obj4 = new Employee();
-How to get the length of the object
	Object.keys(obj).length;
	
-How to check if a property exists in an object
 console.log(propertyName in obj)   (also includes prototype properties)
 obj.hasOwnProperty(propertyName)   (doesn't includes prototype properties)
